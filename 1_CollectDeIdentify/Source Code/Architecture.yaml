AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Sensor Data Collection using AWS IoT.
  **WARNING** You will be billed for the AWS resources used if you create a stack from this template.
  Copyright [2019] Amazon.com, Inc. or its affiliates. All Rights Reserved.
  Licensed under the Apache License, Version 2.0 (the "License").
  You may not use this file except in compliance with the License.
  A copy of the License is located at http://aws.amazon.com/apache2.0/ or in the "license"
  file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT
  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License
  for the specific language governing permissions and limitations under the License.

Mappings:
  Variables:
    LambdaBucket: 
      Name: ereinherz
    DynamoTable:
      Name: PatientReference

Parameters:
  ProcessedDataBucketName:
    Description: Sensor Data S3 Bucket Name
    Default: yourinitials-sensor-data
    Type: String

Resources:

  SensorDataS3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      BucketName: !Ref ProcessedDataBucketName
      AccessControl: Private

  SensorDataCollectionStream:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      DeliveryStreamName: SensorDataCollection
      DeliveryStreamType: 'DirectPut'
      ExtendedS3DestinationConfiguration:
        RoleARN: !GetAtt [FirehoseDeliveryRole, Arn]
        BucketARN: !GetAtt [SensorDataS3Bucket, Arn]
        Prefix: 'original/'
        BufferingHints:
          SizeInMBs: 100
          IntervalInSeconds: 300
        CompressionFormat: 'GZIP'

  FirehoseDeliveryRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - firehose.amazonaws.com
          Action:
          - sts:AssumeRole
          Condition:
            StringEquals:
              sts:ExternalId: !Ref 'AWS::AccountId'

  FirehoseDeliveryRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: FirehoseDeliveryRolePolicy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Action:
            - s3:AbortMultipartUpload
            - s3:GetObject
            - s3:ListBucketMultipartUploads
            - s3:PutObject
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref ProcessedDataBucketName
                - /*
          -
            Effect: Allow
            Action:
            - s3:GetBucketLocation
            - s3:ListBucket
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref ProcessedDataBucketName
          -
            Effect: "Allow"
            Action:
              - "logs:CreateLogGroup"
              - "logs:CreateLogStream"
              - "logs:PutLogEvents"
            Resource: "arn:aws:logs:*:*:*"
      Roles:
        -
          Ref: "FirehoseDeliveryRole"

  Publish:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: Publish
      Handler: Publish.lambda_handler
      Runtime: python3.7
      CodeUri:
        Bucket: !FindInMap [Variables,LambdaBucket,Name]
        Key: Publish.zip
      Description: Generates random life support device sensor data
      MemorySize: 1536
      Timeout: 300
      Policies:
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
        - arn:aws:iam::aws:policy/AWSIoTFullAccess
      Environment:
        Variables:
          IoTTopic: LifeSupportDevice/Sensor

  DeIdentify:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: DeIdentify
      Handler: DeIdentify.lambda_handler
      Runtime: python3.7
      CodeUri:
        Bucket: !FindInMap [Variables,LambdaBucket,Name]
        Key: DeIdentify.zip
      Description: Removes PHI/PII from message, inserts it into DynamoDB, and puts modified message into Kinesis Firehose
      MemorySize: 1536
      Timeout: 300
      Policies:
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
        - arn:aws:iam::aws:policy/AmazonKinesisFirehoseFullAccess
        - arn:aws:iam::aws:policy/AWSIoTFullAccess
      Environment:
        Variables:
          TableName: !FindInMap [Variables,DynamoTable,Name]
          DeliveryStream: SensorDataCollection
      Events:
       IoT:
         Type: IoTRule
         Properties:
            AwsIotSqlVersion: "2016-03-23"
            Sql: "SELECT * FROM 'LifeSupportDevice/Sensor'"

  PatientReferenceTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !FindInMap [Variables,DynamoTable,Name]
      AttributeDefinitions:
        - AttributeName: PatientID
          AttributeType: S
        - AttributeName: Timestamp
          AttributeType: S
      KeySchema:
        - AttributeName: PatientID
          KeyType: HASH
        - AttributeName: Timestamp
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 50
        WriteCapacityUnits: 5
